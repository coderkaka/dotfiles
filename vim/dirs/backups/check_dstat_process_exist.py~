#!/usr/bin/env python
# -*- coding: UTF-8 -*-
import os
import sys
import json
import time
import commands

hc_path = "/tmp/last_hc_stats"
result = {"collection_flag": 0, "error_info": '', "MSG": None}

RESTART="/tmp/dstat.restart"
RUNTIME="/home/slb/logs/slbdstat/runtime.log"

def exec_local_cmd(cmd):
    ret = commands.getstatusoutput(cmd)
    return ret[0], ret[1]

def restart_dstat():

    if not os.path.exists(RESTART):
        cmd = 'echo 4 > %s' % RESTART
        exec_local_cmd(cmd)

    cmd = 'cat %s' % RESTART
    ret, out = exec_local_cmd(cmd)

    process_num = 0
    times = int(out.strip())

    #如果重启次数不超过4次，重启
    if times > 0:
        #备份运行时日志
        cmd = 'cp %s /tmp/dstat.restart.`date +%%Y%%m%%d%%H%%M%%S`.log' % RUNTIME
        exec_local_cmd(cmd)

        #重启dstat
        cmd = 'sudo service slb-dstat-monitor restart'
        exec_local_cmd(cmd)

        #计数减一
        times = times - 1
        cmd = 'echo %d > %s' % (times,RESTART)
        exec_local_cmd(cmd)

        #检查dstat进程
        time.sleep(2)
        cmd = 'ps aux | grep "python slbdstat.py --all-plugins" | grep -v grep | wc -l'
        ret, out = exec_local_cmd(cmd)
        process_num = int(out.strip())

    #如果重启次数超过4次或者重启失败,删除重启计数文件,不再重启
    if process_num == 0:
        cmd = 'rm /tmp/dstat.restart.*'
        exec_local_cmd(cmd)

    return process_num


if __name__ == '__main__':
    cmd = 'ps aux | grep "python slbdstat.py --all-plugins" | grep -v grep | wc -l'
    ret, out = exec_local_cmd(cmd)
    count = int(out.strip())
    if count == 0:
        #dstat进程不存在,重启dstat
        count = restart_dstat()
    dict = {}
    dict['process_num'] = count
    data = []
    data.append(dict)
    result['MSG'] = data
    print json.dumps(result, sort_keys=True, indent=2)
