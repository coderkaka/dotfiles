#!/usr/bin/env python
# -*- coding: utf-8 -*-
# ****************************************************************#
# ScriptName: merge_result.py
# Author: yahua.lyh@alibaba-inc.com
# Create Date: 2018-08-09 21:53
# Modify Author: yahua.lyh@alibaba-inc.com
# Modify Date: 2018-08-09 21:53
# Function:
# ***************************************************************#
import os
import json

workdir = '/home/slb/slb-keyserver-precheck'

def merge_result():
    merge_result = []
    if not os.path.exists('%s/result.json' % workdir):
        os.system('touch %s/result.json && chmod 666 %s/result.json' % (workdir, workdir))
    fp = open('%s/result.json' % workdir, 'a')
    for f in os.listdir(workdir):
        if f.endswith('.txt'):
            machine_info = load_json('%s/%s' % (workdir, f))
            content = machine_info.values()[0]
            hostname = f.strip('.txt')
            total_key = content['keyserver_result']['total_key']
            keyserver_result = content['keyserver_result']['keyserver']['key_correct_count']
            cmdb_result = content['cmdb_result']['cmdb']['key_correct_count']
            compare('%s-keyserver_correct_count' % hostname, total_key, 'total', keyserver_result, 'keyserver')
            compare('%s-cmdb_correct_count' % hostname, total_key, 'total', cmdb_result, 'cmdb')
            compare('%s-aeskey-diff' % hostname, content['keyserver_aeskey'], 'keyserver', content['cmdb_aeskey'], 'cmdb')
            fp.write('%s-aeskey: %s\r\n' % (hostname, content['keyserver_aeskey']))
            merge_result.append(machine_info)
    fp.write('cmdb-aeskey: %s\r\n' % content['cmdb_aeskey'])
    json.dump(merge_result, fp, indent=2)
    fp.close()


def load_json(f):
    with open(f, 'r') as fd:
        content = json.load(fd)
    return content


def compare(item, v1, v2, v3, v4):
    """
    compare the values
    """
    if str(v1) != str(v3):
        print "\x1b[0;30;31m%s: %s [%s] != %s [%s] \x1b[0m" % (item, v1, v2, v3, v4)
        return 1
    else:
        print myAlign(item, 20) + ':' + '\x1b[0;30;32m ok \x1b[0m'
        return 0


def myAlign(string, length=0):
    '''
    formated output
    '''
    if length == 0:
        return string
    slen = len(string)
    re = string
    if isinstance(string, str):
        placeholder = ' '
    else:
        placeholder = u'ã€€'
    while slen < length:
        re += placeholder
        slen += 1
    return re


if __name__ == "__main__":
    merge_result()
